/btc/exchange-flows/reserve:
  get:
    tags:
      - BTC Exchange Flows
    summary: Reserve (Exchange)
    description: This endpoint returns the full historical on-chain balance of Bitcoin exchanges.
    operationId: getReserve
    parameters:
      - $ref: './../parameters.yaml#/exchange'
      - $ref: './../parameters.yaml#/window'
      - $ref: './../parameters.yaml#/from'
      - $ref: './../parameters.yaml#/to'
      - $ref: './../parameters.yaml#/limit'
    x-code-samples:
      - lang: Shell
        source: >-
          curl
          "https://datapack.cryptoquant.com/v1/btc/exchange-flows/reserve?window=day&start=191001&limit=2"
      - lang: JavaScript
        source: >-
          fetch("https://datapack.cryptoquant.com/v1/btc/exchange-flows/reserve?window=day&start=191001&limit=2")
            .then(response => response.json())
            .then(data => console.log(data))
      - lang: NodeJS
        source: |-
          require('axios')
            .get("https://datapack.cryptoquant.com/v1/btc/exchange-flows/reserve?window=day&start=191001&limit=2")
            .then(response => console.log(response))
      - lang: Ruby
        source: >-
          require 'net/http'

          uri =
          URI("https://datapack.cryptoquant.com/v1/btc/exchange-flows/reserve?window=day&start=191001&limit=2")

          puts Net::HTTP.get(uri)
      - lang: Python
        source: >-
          import urllib.request

          url =
          "https://datapack.cryptoquant.com/v1/btc/exchange-flows/reserve?window=day&start=191001&limit=2"

          print(urllib.request.urlopen(url).read())
    responses:
      200:
        $ref: '#/responses/Reserve'
    security:
      - Bearer Access Token: []



/btc/exchange-flows/transactions-count:
  get:
    tags:
      - BTC Exchange Flows
    summary: Transactions Count (Exchange)
    description: This endpoint returns the number of transactions flowing in/out of Bitcoin exchanges.
    operationId: getTransactionsCountEF
    parameters:
      - $ref: './../parameters.yaml#/exchange'
      - $ref: './../parameters.yaml#/window'
      - $ref: './../parameters.yaml#/from'
      - $ref: './../parameters.yaml#/to'
      - $ref: './../parameters.yaml#/limit'
    x-code-samples:
      - lang: Shell
        source: >-
          curl
          "https://datapack.cryptoquant.com/v1/btc/exchange-flows/transactions-count/reserve?window=day&start=191001&limit=2"
      - lang: JavaScript
        source: >-
          fetch("https://datapack.cryptoquant.com/v1/btc/exchange-flows/transactions-count/reserve?window=day&start=191001&limit=2")
            .then(response => response.json())
            .then(data => console.log(data))
      - lang: NodeJS
        source: |-
          require('axios')
            .get("https://datapack.cryptoquant.com/v1/btc/exchange-flows/transactions-count?window=day&start=191001&limit=2")
            .then(response => console.log(response))
      - lang: Ruby
        source: >-
          require 'net/http'

          uri =
          URI("https://datapack.cryptoquant.com/v1/btc/exchange-flows/transactions-count?window=day&start=191001&limit=2")

          puts Net::HTTP.get(uri)
      - lang: Python
        source: >-
          import urllib.request

          url =
          "https://datapack.cryptoquant.com/v1/btc/exchange-flows/transactions-count?window=day&start=191001&limit=2"

          print(urllib.request.urlopen(url).read())
    responses:
      200:
        $ref: '#/responses/TransactionsCountEF'
    security:
      - Bearer Access Token: []

/btc/exchange-flows/inflow:
  get:
    tags:
      - BTC Exchange Flows
    summary: Inflow (Exchange)
    description: This endpoint returns the inflow of BTC into exchange wallets for as far back as we track. The average inflow is the average transaction value for transactions flowing into exchange wallets on a given day.
    operationId: getInflow
    parameters:
      - $ref: './../parameters.yaml#/exchange'
      - $ref: './../parameters.yaml#/window'
      - $ref: './../parameters.yaml#/from'
      - $ref: './../parameters.yaml#/to'
      - $ref: './../parameters.yaml#/limit'
    x-code-samples:
      - lang: Shell
        source: >-
          curl
          "https://datapack.cryptoquant.com/v1/btc/exchange-flows/inflow?window=day&start=191001&limit=2"
      - lang: JavaScript
        source: >-
          fetch("https://datapack.cryptoquant.com/v1/btc/exchange-flows/inflow?window=day&start=191001&limit=2")
            .then(response => response.json())
            .then(data => console.log(data))
      - lang: NodeJS
        source: |-
          require('axios')
            .get("https://datapack.cryptoquant.com/v1/btc/exchange-flows/inflow?window=day&start=191001&limit=2")
            .then(response => console.log(response))
      - lang: Ruby
        source: >-
          require 'net/http'

          uri =
          URI("https://datapack.cryptoquant.com/v1/btc/exchange-flows/inflow?window=day&start=191001&limit=2")

          puts Net::HTTP.get(uri)
      - lang: Python
        source: >-
          import urllib.request

          url =
          "https://datapack.cryptoquant.com/v1/btc/exchange-flows/inflow?window=day&start=191001&limit=2"

          print(urllib.request.urlopen(url).read())
    responses:
      200:
        $ref: '#/responses/Inflow'
    security:
      - Bearer Access Token: []

/btc/exchange-flows/outflow:
  get:
    tags:
      - BTC Exchange Flows
    summary: Outflow (Exchange)
    description: This endpoint returns the outflow of BTC into exchange wallets for as far back as we track. The average outflow is the average transaction value for transactions flowing into exchange wallets on a given day.
    operationId: getOutflow
    parameters:
      - $ref: './../parameters.yaml#/exchange'
      - $ref: './../parameters.yaml#/window'
      - $ref: './../parameters.yaml#/from'
      - $ref: './../parameters.yaml#/to'
      - $ref: './../parameters.yaml#/limit'
    x-code-samples:
      - lang: Shell
        source: >-
          curl
          "https://datapack.cryptoquant.com/v1/btc/exchange-flows/outflow?window=day&start=191001&limit=2"
      - lang: JavaScript
        source: >-
          fetch("https://datapack.cryptoquant.com/v1/btc/exchange-flows/outflow?window=day&start=191001&limit=2")
            .then(response => response.json())
            .then(data => console.log(data))
      - lang: NodeJS
        source: |-
          require('axios')
            .get("https://datapack.cryptoquant.com/v1/btc/exchange-flows/outflow?window=day&start=191001&limit=2")
            .then(response => console.log(response))
      - lang: Ruby
        source: >-
          require 'net/http'

          uri =
          URI("https://datapack.cryptoquant.com/v1/btc/exchange-flows/outflow?window=day&start=191001&limit=2")

          puts Net::HTTP.get(uri)
      - lang: Python
        source: >-
          import urllib.request

          url =
          "https://datapack.cryptoquant.com/v1/btc/exchange-flows/outflow?window=day&start=191001&limit=2"

          print(urllib.request.urlopen(url).read())
    responses:
      200:
        $ref: '#/responses/Outflow'
    security:
      - Bearer Access Token: []

/btc/exchange-flows/addresses-count:
  get:
    tags:
      - BTC Exchange Flows
    summary: Addresses Count (Exchange)
    description: This endpoint returns the number of addresses involved in inflow/outflow transactions.
    operationId: getAddressesCountEF
    parameters:
      - $ref: './../parameters.yaml#/exchange'
      - $ref: './../parameters.yaml#/window'
      - $ref: './../parameters.yaml#/from'
      - $ref: './../parameters.yaml#/to'
      - $ref: './../parameters.yaml#/limit'
    x-code-samples:
      - lang: Shell
        source: >-
          curl
          "https://datapack.cryptoquant.com/v1/btc/exchange-flows/addresses-count?window=day&start=191001&limit=2"
      - lang: JavaScript
        source: >-
          fetch("https://datapack.cryptoquant.com/v1/btc/exchange-flows/addresses-count?window=day&start=191001&limit=2")
            .then(response => response.json())
            .then(data => console.log(data))
      - lang: NodeJS
        source: |-
          require('axios')
            .get("https://datapack.cryptoquant.com/v1/btc/exchange-flows/addresses-count?window=day&start=191001&limit=2")
            .then(response => console.log(response))
      - lang: Ruby
        source: >-
          require 'net/http'

          uri =
          URI("https://datapack.cryptoquant.com/v1/btc/exchange-flows/addresses-count?window=day&start=191001&limit=2")

          puts Net::HTTP.get(uri)
      - lang: Python
        source: >-
          import urllib.request

          url =
          "https://datapack.cryptoquant.com/v1/btc/exchange-flows/addresses-count?window=day&start=191001&limit=2"

          print(urllib.request.urlopen(url).read())
    responses:
      200:
        $ref: '#/responses/AddressesCountEF'
    security:
      - Bearer Access Token: []

responses:

  Reserve:
    description: The amount of BTC on a given exchange on this window.
    content:
      application/json:
        schema:
          $ref: '#/schemas/ReserveResponse'
        example:
          status:
            code: 200
            message: "success"
          result:
            window: "day"
            data:
              - datetime: "2019-10-01T00:00:00"
                reserve:
                reserve_usd:

              - datetime: "2019-10-02T00:00:00"
                reserve:
                reserve_usd:

  TransactionsCountEF:
    description: transactions_count_inflow, transactions_count_outflow
    content:
      application/json:
        schema:
          $ref: '#/schemas/TransactionsCountEFResponse'
        example:
          status:
            code: 200
            message: "success"
          result:
            window: "day"
            data:
              - datetime: "2019-10-01T00:00:00"
                transactions_count_inflow:
                transactions_count_outflow:

              - datetime: "2019-10-02T00:00:00"
                transactions_count_inflow:
                transactions_count_outflow:

  Inflow:
    description: inflow_total, inflow_mean, inflow_top10
    content:
      application/json:
        schema:
          $ref: '#/schemas/InflowResponse'
        example:
          status:
            code: 200
            message: "success"
          result:
            window: "day"
            data:
              - datetime: "2019-10-01T00:00:00"
                inflow_total:
                inflow_mean:
                inflow_top10:

              - datetime: "2019-10-02T00:00:00"
                inflow_total:
                inflow_mean:
                inflow_top10:

  Outflow:
    description: outflow_total, outflow_mean, outflow_top10
    content:
      application/json:
        schema:
          $ref: '#/schemas/OutflowResponse'
        example:
          status:
            code: 200
            message: "success"
          result:
            window: "day"
            data:
              - datetime: "2019-10-01T00:00:00"
                outflow_total:
                outflow_mean:
                outflow_top10:

              - datetime: "2019-10-02T00:00:00"
                outflow_total:
                outflow_mean:
                outflow_top10:


  AddressesCountEF:
    description: The number of addresses evoking inflow/outflow transactions to exchange wallets
    content:
      application/json:
        schema:
          $ref: '#/schemas/AddressesCountEFResponse'
        example:
          status:
            code: 200
            message: "success"
          result:
            window: "day"
            data:
              - datetime: "2019-10-01T00:00:00"
                addresses_count_inflow:
                addresses_count_outflow:

              - datetime: "2019-10-02T00:00:00"
                addresses_count_inflow:
                addresses_count_outflow:



schemas:
  ReserveResponse:
    type: object
    required:
      - status
      - result
    properties:
      status:
        $ref: './../basic_schemas.yaml#/Status'
      result:
        type: object
        required:
          - window
          - data
        properties:
          window:
            $ref: './../basic_schemas.yaml#/Window'
          data:
            type: array
            items:
              type: object
              required:
                - reserve
                - reserve_usd
              properties:
                blockheight:
                  $ref: './../basic_schemas.yaml#/Blockheight'
                datetime:
                  $ref: './../basic_schemas.yaml#/Datetime'
                reserve:
                  type: decimal
                  description: The amount of BTC on a given exchange on this window.
                reserve_usd:
                  type: decimal
                  description: The USD value of the amount of BTC on a given exchange on this window.

  TransactionsCountEFResponse:
    type: object
    required:
      - status
      - result
    properties:
      status:
        $ref: './../basic_schemas.yaml#/Status'
      result:
        type: object
        required:
          - window
          - data
        properties:
          window:
            $ref: './../basic_schemas.yaml#/Window'
          data:
            type: array
            items:
              type: object
              required:
                - transactions_count_inflow
                - transactions_count_outflow
              properties:
                blockheight:
                  $ref: './../basic_schemas.yaml#/Blockheight'
                datetime:
                  $ref: './../basic_schemas.yaml#/Datetime'
                transactions_count_inflow:
                  type: decimal
                  description: The number of transactions going to the exchange on this window.
                transactions_count_outflow:
                  type: decimal
                  description: The number of transactions going out of the exchange on this window.

  InflowResponse:
    type: object
    required:
      - status
      - result
    properties:
      status:
        $ref: './../basic_schemas.yaml#/Status'
      result:
        type: object
        required:
          - window
          - data
        properties:
          window:
            $ref: './../basic_schemas.yaml#/Window'
          data:
            type: array
            items:
              type: object
              required:
                - inflow_total
                - inflow_mean
                - inflow_top10
              properties:
                blockheight:
                  $ref: './../basic_schemas.yaml#/Blockheight'
                datetime:
                  $ref: './../basic_schemas.yaml#/Datetime'
                inflow_total:
                  type: decimal
                  description: The total amount of BTC that flowed into the entity on this window.
                inflow_mean:
                  type: decimal
                  description: The mean amount of tokens per transactions sent to exchange wallets.
                inflow_top10:
                  type: decimal
                  description: The total BTC amount of top 10 transactions (in terms of total BTC sent) flowing out of exchange wallets for every day that the exchange wallets we track have been live on the blockchain.

  OutflowResponse:
    type: object
    required:
      - status
      - result
    properties:
      status:
        $ref: './../basic_schemas.yaml#/Status'
      result:
        type: object
        required:
          - window
          - data
        properties:
          window:
            $ref: './../basic_schemas.yaml#/Window'
          data:
            type: array
            items:
              type: object
              required:
                - outflow_total
                - outflow_mean
                - outflow_top10
              properties:
                blockheight:
                  $ref: './../basic_schemas.yaml#/Blockheight'
                datetime:
                  $ref: './../basic_schemas.yaml#/Datetime'
                outflow_total:
                  type: decimal
                  description: The total amount of BTC that flowed out of the entity on this window. Denominated in BTC.
                outflow_mean:
                  type: decimal
                  description: The mean amount of tokens per transactions sent from exchange wallets
                outflow_top10:
                  type: decimal
                  description: The total BTC amount of top 10 transactions (in terms of total BTC sent) flowing out of exchange wallets for every day that the exchange wallets we track have been live on the blockchain.


  AddressesCountEFResponse:
    type: object
    required:
      - status
      - result
    properties:
      status:
        $ref: './../basic_schemas.yaml#/Status'
      result:
        type: object
        required:
          - window
          - data
        properties:
          window:
            $ref: './../basic_schemas.yaml#/Window'
          data:
            type: array
            items:
              type: object
              required:
                - addresses_count_inflow
                - addresses_count_outflow
              properties:
                blockheight:
                  $ref: './../basic_schemas.yaml#/Blockheight'
                datetime:
                  $ref: './../basic_schemas.yaml#/Datetime'
                addresses_count_inflow:
                  type: decimal
                  description: The number of addresses evoking inflow transactions to exchange wallets
                addresses_count_outflow:
                  type: decimal
                  description: The number of addresses evoking outflow transactions from exchange wallets
