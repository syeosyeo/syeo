price-usd:
  get:
    tags:
      - BTC Market Data
    summary: Price USD
    description: This endpoint returns metrics related to the US Dollar(USD) price of BTC. At this endpoint, metrics are calculated by Minute, Day, and Block. We provide four metrics, `price_usd_open`, USD opening price at the beginning of the window, `price_usd_close`, USD closing price at the end of the window, `price_usd_high`, the highest USD price in a given window, and `price_usd_low`, the lowest USD price in a given window. (블록단위 가격은 초를 버린 값이다. Days는 day와 datetime 모두를 받을 수 있는데 현재는 date만 받는다. min이나 hour)
    operationId: getPriceUSD
    parameters:
      - $ref: './../../parameters.yaml#/window_mdb'
      - $ref: './../../parameters.yaml#/from'
      - $ref: './../../parameters.yaml#/to'
      - $ref: './../../parameters.yaml#/limit'
    x-code-samples:
      - lang: Shell
        source: >-
          curl
          "https://datapack.cryptoquant.com/v1/btc/market-data/price-usd?window=day&start=191001&limit=2"
      - lang: JavaScript
        source: >-
          fetch("https://datapack.cryptoquant.com/v1/btc/market-data/price-usd?window=day&start=191001&limit=2")
            .then(response => response.json())
            .then(data => console.log(data))
      - lang: NodeJS
        source: |-
          require('axios')
            .get("https://datapack.cryptoquant.com/v1/btc/market-data/price-usd?window=day&start=191001&limit=2")
            .then(response => console.log(response))
      - lang: Ruby
        source: >-
          require 'net/http'

          uri =
          URI("https://datapack.cryptoquant.com/v1/btc/market-data/price-usd?window=day&start=191001&limit=2")

          puts Net::HTTP.get(uri)
      - lang: Python
        source: >-
          import urllib.request

          url =
          "https://datapack.cryptoquant.com/v1/btc/market-data/price-usd?window=day&start=191001&limit=2"

          print(urllib.request.urlopen(url).read())
    responses:
      200:
        $ref: './responses.yaml#/PriceUSD'
    security:
      - Bearer Access Token: []

capitalization:
  get:
    tags:
      - BTC Market Data
    summary: Capitalization
    description: This endpoint returns metrics related to market capitalization. First, we provide `market_cap`, which is total market capitalization of BTC, calculated by multiplying the total supply with its USD price. Moreover, we provide several adjusted capitalization metrics which are used for proper BTC valuation. `realized_cap` is the sum of each UTXO * last movement price. Since cryptocurrencies are vulnerable of being lost, unclaimed, or unreachable through various bugs, `realized_cap` is introduced to discount those coins which have unmoved for a long period. It indicates whether Bitcoin is overvalued or not. This can be described as an on-chain version of volume weighted average price(VWAP). `average_cap` is forever moving average, calculated by dividing the cumulated sum of daily market cap with the age of market. Instead of using fixed time for calculating the moving average (e.g. 50 days, 100days ...), this serves as the true mean.  Both `realized_cap` and `average_cap` are used to calculate `delta_cap` (`realized_cap`-`average_cap`). `delta_cap` is capable of spotting market bottoms. Moreover, by analyzing the movement of `delta_cap` which oscillates between `realized_cap` and `average_cap`, we could notice that market tops are reached when `delta_cap` is near `realized_cap`(in a log scaled chart). `mvrv`(Market-Value-to-Realized-Value) is a ratio, `market_cap` divided by `realized_cap`. It can be interpreted as the relationship between short-term and long-term investors (i.e. speculators vs hodlers). When this value is too high, BTC price may be overvalued, and if it is too low, there is a possibility that the price is undervalued.
    operationId: getCapitalization
    parameters:
      - $ref: './../../parameters.yaml#/window'
      - $ref: './../../parameters.yaml#/from'
      - $ref: './../../parameters.yaml#/to'
      - $ref: './../../parameters.yaml#/limit'
    x-code-samples:
      - lang: Shell
        source: >-
          curl
          "https://datapack.cryptoquant.com/v1/btc/market-data/capitalization?window=day&start=191001&limit=2"
      - lang: JavaScript
        source: >-
          fetch("https://datapack.cryptoquant.com/v1/btc/market-data/capitalization?window=day&start=191001&limit=2")
            .then(response => response.json())
            .then(data => console.log(data))
      - lang: NodeJS
        source: |-
          require('axios')
            .get("https://datapack.cryptoquant.com/v1/btc/market-data/capitalization?window=day&start=191001&limit=2")
            .then(response => console.log(response))
      - lang: Ruby
        source: >-
          require 'net/http'

          uri =
          URI("https://datapack.cryptoquant.com/v1/btc/market-data/capitalization?window=day&start=191001&limit=2")

          puts Net::HTTP.get(uri)
      - lang: Python
        source: >-
          import urllib.request

          url =
          "https://datapack.cryptoquant.com/v1/btc/market-data/capitalization?window=day&start=191001&limit=2"

          print(urllib.request.urlopen(url).read())
    responses:
      200:
        $ref: './responses.yaml#/Capitalization'
    security:
      - Bearer Access Token: []


nvt:
  get:
    tags:
      - BTC Market Data
    summary: NVT
    description: NVT(Network Value to Transaction) ratio is the network value(`supply_total`) divided by `tokens_transferred_total`. `nvt` is a metric often used to determine whether Bitcoin price is overvalued or not. The theory behind this indicator is that the value of the token depends on how actively transactions take place on the network.
    operationId: getNVT
    parameters:
      - $ref: './../../parameters.yaml#/window'
      - $ref: './../../parameters.yaml#/from'
      - $ref: './../../parameters.yaml#/to'
      - $ref: './../../parameters.yaml#/limit'
    x-code-samples:
      - lang: Shell
        source: >-
          curl
          "https://datapack.cryptoquant.com/v1/btc/market-data/nvt?window=day&start=191001&limit=2"
      - lang: JavaScript
        source: >-
          fetch("https://datapack.cryptoquant.com/v1/btc/market-data/nvt?window=day&start=191001&limit=2")
            .then(response => response.json())
            .then(data => console.log(data))
      - lang: NodeJS
        source: |-
          require('axios')
            .get("https://datapack.cryptoquant.com/v1/btc/market-data/nvt?window=day&start=191001&limit=2")
            .then(response => console.log(response))
      - lang: Ruby
        source: >-
          require 'net/http'

          uri =
          URI("https://datapack.cryptoquant.com/v1/btc/market-data/nvt?window=day&start=191001&limit=2")

          puts Net::HTTP.get(uri)
      - lang: Python
        source: >-
          import urllib.request

          url =
          "https://datapack.cryptoquant.com/v1/btc/market-data/nvt?window=day&start=191001&limit=2"

          print(urllib.request.urlopen(url).read())
    responses:
      200:
        $ref: './responses.yaml#/NVT'
    security:
      - Bearer Access Token: []
