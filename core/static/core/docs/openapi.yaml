# 참고 - https://github.com/Redocly/redoc
# 테마설정 - https://github.com/Redocly/redoc/blob/63ae2e8e943b1cf2838db20c6c567156a2bfac45/src/theme.ts
# yaml 파일 문법 - https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#oasDocument

openapi: 3.0.0

# api 서버 주소 - 각 api 엔드포인트에 대한 full url 제공시 보여짐
# https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#server-object
servers:
  - url: https://datapack.cryptoquant.com/v1/
    description: Default server
  # - url: https://cryptoquant.com/sandbox/
  #   description: Sandbox server

# api 문서에 대한 설명
# https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#info-object
info:
  $ref: ./info.yaml

# externalDocs:
#   description: Find out how to create Github repo for your OpenAPI spec.
#   url: 'https://github.com/Rebilly/generator-openapi-repo'

# 좌측 메뉴에 나타나는 주요 항목들
tags:
  - name: BTC Network Data
    description: Bitcoin on-chain network data including but not limited to token movements, fees, supply, address movements, etc.
  - name: BTC Market Data
    description: This namespace contains endpoints to retrieve metrics related to the value of Bitcoin, including price, market cap, nvt ratio, realized cap, etc. On top of providing basic market data like usd price and market cap, we focus on onchain indicators in order to evaluate the true value of Bitcoin. These indicators are useful when investing, especially when finding highs or lows. For more detailed information, please refer to the description of each metric.
  - name: BTC Exchange Flows
    description: |-
      This endpoint returns the flows of BTC into exchange wallets for as far back as we track.
      ### Supported exchanges

      | Name           |   Symbol   |   Status    |
      |----------------|------------|-------------|
      | Binance        |   `binance`  | Validated   |
      | Bitfinex       |   `bitfinex` | Validated   |
      | Bitmex         |   `bitmex`   | Validated   |
      | Bitflyer       |   `bitflyer` | In Progress |
      | Bitstamp       |   `bitstamp` | In Progress |
      | Bittrex        |   `Bittrex`  | Validated   |
      | Coinone        |   `coinone`  | Validated   |
      | GOPAX          |   `gopax`    | Validated   |
      | Huobi Global   |   `hubg`     | In Progress |
      | Korbit         |   `korbit`   | In Progress |
      | Kraken         |   `kraken`   | Validated   |
      | OKex           |   `okex`     | In Progress |
      | Poloniex       |   `poloniex` | Validated   |
  - name: BTC Miner Flows
    description: |-
      This namespace contains endpoints to retrieve data related to Bitcoin miners(i.e. mining pools). We provide metrics related to miner reserves, inflows, outflows, hashrate, revenue, workers, etc.
      ### Supported Miners
      | Name           |   Symbol     |   Status    |
      |----------------|--------------|-------------|
      | btc.com        |   `btc-com`  | Validated   |
      | btc.top        |   `btc-top`  | Validated   |
      | f2pool         |   `f2pool`   | Validated   |
      | huobi          |   `huobi`    | Validated   |
      | poolin         |   `poolin `  | Validated   |
      | slush          |   `slush`    | Validated   |
      | viabtc         |   `viabtc`   | Validated   |
      | antpool        |   `antpool`  | Validated   |
  - name: BTC Inter Entity Flows
  - name: ETH Network Data
  - name: ETH Market Data
  - name: Stablecoin Network Data
    description: |-
      This namespace contains endpoint to retrieve on-chain network data of stablecoins, including token transfers, issuance, addresses, etc.
      ### Supported stablecoins
      | Name                |   Symbol       |
      |---------------------|----------------|
      | Tether USD(ERC20)   |   `usdt_erc20` |
      | Tether USD(Omni)    |   `usdt_omni`  |
      | Paxos Standard      |   `paxos`      |
      | USD Coin            |   `usdc`       |
      | True USD            |   `tusd`       |
      | Dai                 |   `dai`        |

      ### Stablecoin Issuing Mechanism
      Each individual Stablecoin is created by an issuing company and each of these companies operates with a different issue mechanism.
      here are many of these but the two most common are as follows.




      #### Example 1
      ![Ussuing Methodology 1](/static/core/docs/images/stable1.png)
      Before providing clients with the granting address, the issuing company holds a treasury address. Through the contract, the tokens are minted and held in the treasury address. Once the client sends fiat currency, the clients tokens are moved from the treasury address to the client address and the tokens are listed as being issued.
      Conversely, when redeeming tokens for fiat, the tokens are sent to the treasury address and redeemed. This won't be reflected in the supply unless these tokens are burned using a contract by the issuing company. The circulating supply is calculated as tokens that have been issued to clients, ignoring the supply held in the issuing company wallets.
      #### Example 2
      ![Ussuing Methodology 2](/static/core/docs/images/stable2.png)
      In this method, there is no separate treasury address. After confirming the deposit of fiat, tokens are minted from the contract address and delivered directly to the client address. Minting and issuance occur simultaneously. When clients redeem tokens, the burn and redemption also are simultaneous.
      This means that with this method, total supply and circulating supply will be the same. There are various methods for Stablecoin issuance, and we calculated supply and locate significant transactions.  based upon these types of factors. In the future, mint/issue/burn/redeem will be added to our available metrics and will be defined as listed below.

      #### Terminology

      | Term          |   Definition   |
      |----------------|------------|
      | Mint    |  Mint is a creation of new tokens that add to the supply. When tokens are minted, the total supply will increase.      |
      | Issue   |Issue is when tokens are delivered to clients after deposit of fiat has been confirmed. When tokens are issued, the circulating supply will increase. |
      | Burn   |Burn is a revocation of currently existing tokens that results in a decreased supply. The opposite of Mint.|
      | Redeem     | Redeem is an exchange of tokens for deposited fiat that results in a decrease in the circulating supply. The opposite of Issue.|

  - name: Stablecoin Market Data
    description: This namespace contains endpoints to retrieve metrics related to the value of tokens, including price, market cap etc.
x-tagGroups:
  - name: Bitcoin
    tags:
      - BTC Network Data
      - BTC Market Data
      - BTC Exchange Flows
      - BTC Miner Flows
      - BTC Inter Entity Flows
  - name: Stablecoin
    tags:
      - Stablecoin Network Data
      - Stablecoin Market Data

paths:
  $ref: './index.yaml'

components:
  parameters:
    $ref: './parameters.yaml'

  securitySchemes:
    Bearer Access Token:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
      description: |-
        You must include your access token in HTTP header in every request you make. The token is unique, issued for each client, and regularly changed(once a year). Get your access token [here](mailto:contact@cryptoquant.com).

  examples:
    Order:
      value:
        quantity: 1,
        shipDate: 2018-10-19T16:46:45Z,
        status: placed,
        complete: false
